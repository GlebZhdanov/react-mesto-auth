{"ast":null,"code":"export class Api {\n  constructor(config) {\n    this._url = config.url;\n    this._headers = config.headers;\n  }\n\n  putCardLike(id) {\n    return fetch(`${this._url}/cards/likes/${id}`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(res => {\n      return this._chekRes(res);\n    });\n  }\n\n  deleteCardLike(id) {\n    return fetch(`${this._url}/cards/likes/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => {\n      return this._chekRes(res);\n    });\n  }\n\n  getAllData() {\n    return Promise.all([this.getUserInfo(), this.getAllCards()]);\n  }\n\n  _chekRes(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(console.log(`Ошибка: ${res.status}`));\n  }\n\n  getAllCards() {\n    return fetch(`${this._url}/cards`, {\n      method: \"GET\",\n      headers: this._headers\n    }).then(res => {\n      return this._chekRes(res);\n    });\n  }\n\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      method: \"GET\",\n      headers: this._headers\n    }).then(res => {\n      return this._chekRes(res);\n    });\n  }\n\n  patchUserInfo(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(res => {\n      return this._chekRes(res);\n    });\n  }\n\n  uploadAvatar(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(res => {\n      return this._chekRes(res);\n    });\n  }\n\n  postNewCard(data) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(res => {\n      return this._chekRes(res);\n    });\n  } // putCardLike(id) {\n  //   return fetch(`${this._url}/cards/likes/${id}`, {\n  //     method: 'PUT',\n  //     headers: this._headers,\n  //   })\n  //     .then((res) => {\n  //       return this._chekRes(res)\n  //     });\n  // }\n  //\n  // deleteCardLike(id) {\n  //   return fetch(`${this._url}/cards/likes/${id}`, {\n  //     method: 'DELETE',\n  //     headers: this._headers,\n  //   })\n  //     .then((res) => {\n  //       return this._chekRes(res)\n  //     });\n  // }\n\n\n  deleteCard(data) {\n    return fetch(`${this._url}/cards/${data._id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => {\n      return this._chekRes(res);\n    });\n  }\n\n}\nconst api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-30',\n  headers: {\n    authorization: 'b725fbaf-4205-4fab-8325-c71ecb1c6595',\n    'Content-Type': 'application/json'\n  }\n});\nexport { api };","map":{"version":3,"sources":["/Users/glebzdanov/Desktop/ПР 10 React/mesto-react/src/utils/Api.js"],"names":["Api","constructor","config","_url","url","_headers","headers","putCardLike","id","fetch","method","then","res","_chekRes","deleteCardLike","getAllData","Promise","all","getUserInfo","getAllCards","ok","json","reject","console","log","status","patchUserInfo","data","body","JSON","stringify","uploadAvatar","postNewCard","deleteCard","_id","api","authorization"],"mappings":"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","sourcesContent":["export class Api {\n  constructor(config) {\n    this._url = config.url;\n    this._headers = config.headers;\n  }\n\n  putCardLike(id) {\n    return fetch(`${this._url}/cards/likes/${id}`, {\n      method: 'PUT',\n      headers: this._headers,\n    })\n      .then((res) => {\n        return this._chekRes(res)\n      });\n  }\n\n  deleteCardLike(id) {\n    return fetch(`${this._url}/cards/likes/${id}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    })\n      .then((res) => {\n        return this._chekRes(res)\n      });\n  }\n\n\n\n\n  getAllData() {\n    return Promise.all([this.getUserInfo(), this.getAllCards()]);\n  }\n\n  _chekRes(res) {\n    if (res.ok) {\n      return res.json()\n    }\n    return Promise.reject(console.log(`Ошибка: ${res.status}`))\n  }\n\n  getAllCards() {\n    return fetch(`${this._url}/cards`, {\n      method: \"GET\",\n      headers: this._headers\n    })\n    .then(res => {\n      return this._chekRes(res)\n    })\n  }\n\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      method: \"GET\",\n      headers: this._headers\n    })\n      .then((res) => {\n        return this._chekRes(res)\n      })\n  }\n\n  patchUserInfo(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(data)\n    })\n      .then((res) => {\n        return this._chekRes(res)\n      })\n  }\n\n  uploadAvatar(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(data)\n    })\n      .then((res) => {\n        return this._chekRes(res)\n      })\n  }\n\n  postNewCard(data) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify(data)\n    })\n      .then((res) => {\n        return this._chekRes(res)\n      })\n  }\n\n  // putCardLike(id) {\n  //   return fetch(`${this._url}/cards/likes/${id}`, {\n  //     method: 'PUT',\n  //     headers: this._headers,\n  //   })\n  //     .then((res) => {\n  //       return this._chekRes(res)\n  //     });\n  // }\n  //\n  // deleteCardLike(id) {\n  //   return fetch(`${this._url}/cards/likes/${id}`, {\n  //     method: 'DELETE',\n  //     headers: this._headers,\n  //   })\n  //     .then((res) => {\n  //       return this._chekRes(res)\n  //     });\n  // }\n\n  deleteCard(data) {\n    return fetch(`${this._url}/cards/${data._id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    })\n      .then((res) => {\n        return this._chekRes(res)\n      })\n  }\n  }\n\n  const api = new Api({\n    url: 'https://mesto.nomoreparties.co/v1/cohort-30',\n    headers: {\n      authorization: 'b725fbaf-4205-4fab-8325-c71ecb1c6595',\n      'Content-Type' : 'application/json'\n    }\n  })\n\n  export {api}\n"]},"metadata":{},"sourceType":"module"}