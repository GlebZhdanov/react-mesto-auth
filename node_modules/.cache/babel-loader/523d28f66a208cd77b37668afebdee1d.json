{"ast":null,"code":"export class Auth {\n  constructor(config) {\n    this._url = config.url;\n    this._headers = config.headers;\n  }\n\n  _chekRes(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(console.log(`Ошибка: ${res.status}`));\n  }\n\n  registration(_ref) {\n    let {\n      password,\n      email\n    } = _ref;\n    return fetch(this._url + \"/signup\", {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        password,\n        email\n      })\n    }).then(this._chekRes);\n  }\n\n  authorization(_ref2) {\n    let {\n      password,\n      email\n    } = _ref2;\n    return fetch(this._url + \"/signin\", {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        password,\n        email\n      })\n    }).then(this._chekRes);\n  }\n\n}\nconst auth = new Auth({\n  url: 'https://auth.nomoreparties.co',\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport { auth };","map":{"version":3,"sources":["/Users/glebzdanov/Desktop/react-mesto-auth/src/utils/Auth.js"],"names":["Auth","constructor","config","_url","url","_headers","headers","_chekRes","res","ok","json","Promise","reject","console","log","status","registration","password","email","fetch","method","body","JSON","stringify","then","authorization","auth"],"mappings":"AAAA,OAAO,MAAMA,IAAN,CAAW;AAChBC,EAAAA,WAAW,CAACC,MAAD,EAAS;AAClB,SAAKC,IAAL,GAAYD,MAAM,CAACE,GAAnB;AACA,SAAKC,QAAL,GAAgBH,MAAM,CAACI,OAAvB;AACD;;AAEDC,EAAAA,QAAQ,CAACC,GAAD,EAAM;AACZ,QAAIA,GAAG,CAACC,EAAR,EAAY;AACV,aAAOD,GAAG,CAACE,IAAJ,EAAP;AACD;;AACD,WAAOC,OAAO,CAACC,MAAR,CAAeC,OAAO,CAACC,GAAR,CAAa,WAAUN,GAAG,CAACO,MAAO,EAAlC,CAAf,CAAP;AACD;;AAEDC,EAAAA,YAAY,OAAoB;AAAA,QAAnB;AAACC,MAAAA,QAAD;AAAWC,MAAAA;AAAX,KAAmB;AAC9B,WAAOC,KAAK,CAAC,KAAKhB,IAAL,GAAY,SAAb,EAAwB;AAClCiB,MAAAA,MAAM,EAAE,MAD0B;AAElCd,MAAAA,OAAO,EAAE,KAAKD,QAFoB;AAGlCgB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBN,QAAAA,QADmB;AAEnBC,QAAAA;AAFmB,OAAf;AAH4B,KAAxB,CAAL,CAQJM,IARI,CAQC,KAAKjB,QARN,CAAP;AASD;;AAEDkB,EAAAA,aAAa,QAAoB;AAAA,QAAnB;AAACR,MAAAA,QAAD;AAAWC,MAAAA;AAAX,KAAmB;AAC/B,WAAOC,KAAK,CAAC,KAAKhB,IAAL,GAAY,SAAb,EAAwB;AAClCiB,MAAAA,MAAM,EAAE,MAD0B;AAElCd,MAAAA,OAAO,EAAE,KAAKD,QAFoB;AAGlCgB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBN,QAAAA,QADmB;AAEnBC,QAAAA;AAFmB,OAAf;AAH4B,KAAxB,CAAL,CAQJM,IARI,CAQC,KAAKjB,QARN,CAAP;AASD;;AAnCe;AAuClB,MAAMmB,IAAI,GAAG,IAAI1B,IAAJ,CAAS;AACpBI,EAAAA,GAAG,EAAE,+BADe;AAEpBE,EAAAA,OAAO,EAAE;AACP,oBAAgB;AADT;AAFW,CAAT,CAAb;AAOA,SAAQoB,IAAR","sourcesContent":["export class Auth {\n  constructor(config) {\n    this._url = config.url;\n    this._headers = config.headers;\n  }\n\n  _chekRes(res) {\n    if (res.ok) {\n      return res.json()\n    }\n    return Promise.reject(console.log(`Ошибка: ${res.status}`))\n  }\n\n  registration({password, email}) {\n    return fetch(this._url + \"/signup\", {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        password,\n        email\n      })\n    })\n      .then(this._chekRes)\n  }\n\n  authorization({password, email}) {\n    return fetch(this._url + \"/signin\", {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        password,\n        email\n      })\n    })\n      .then(this._chekRes)\n  }\n\n}\n\nconst auth = new Auth({\n  url: 'https://auth.nomoreparties.co',\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n})\n\nexport {auth}"]},"metadata":{},"sourceType":"module"}