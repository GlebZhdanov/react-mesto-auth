{"ast":null,"code":"export class Api {\n  constructor(config) {\n    this._url = config.url;\n    this._headers = config.headers;\n  }\n\n  getAll() {\n    return Promise.all([this.getAllCards(), this.getUserInfo()]);\n  }\n\n  _chekRes(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(console.log(`Ошибка: ${res.status}`));\n  }\n\n  getAllCards() {\n    return fetch(`${this._url}/cards`, {\n      method: \"GET\",\n      headers: this._headers\n    }).then(res => {\n      return this._chekRes(res);\n    });\n  }\n\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      method: \"GET\",\n      headers: this._headers\n    }).then(res => {\n      return this._chekRes(res);\n    });\n  }\n\n  patchUserInfo(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(res => {\n      return this._chekRes(res);\n    });\n  }\n\n  uploadAvatar(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(res => {\n      return this._chekRes(res);\n    });\n  }\n\n  postNewCard(data) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(res => {\n      return this._chekRes(res);\n    });\n  }\n\n  putCardLike(id) {\n    return fetch(`${this._url}/cards/likes/${id}`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(res => {\n      return this._chekRes(res);\n    });\n  }\n\n  deleteCardLike(id) {\n    return fetch(`${this._url}/cards/likes/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => {\n      return this._chekRes(res);\n    });\n  }\n\n  deleteCard(data) {\n    return fetch(`${this._url}/cards/${data._id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => {\n      return this._chekRes(res);\n    });\n  }\n\n}\nconst api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-30',\n  headers: {\n    authorization: 'b725fbaf-4205-4fab-8325-c71ecb1c6595',\n    'Content-Type': 'application/json'\n  }\n});\nexport { api };","map":{"version":3,"sources":["/Users/glebzdanov/Desktop/ПР 10 React/mesto-react/src/utils/Api.js"],"names":["Api","constructor","config","_url","url","_headers","headers","getAll","Promise","all","getAllCards","getUserInfo","_chekRes","res","ok","json","reject","console","log","status","fetch","method","then","patchUserInfo","data","body","JSON","stringify","uploadAvatar","postNewCard","putCardLike","id","deleteCardLike","deleteCard","_id","api","authorization"],"mappings":"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","sourcesContent":["export class Api {\n  constructor(config) {\n    this._url = config.url;\n    this._headers = config.headers;\n  }\n\n\n  getAll() {\n    return Promise.all([this.getAllCards(), this.getUserInfo()]);\n  }\n\n_chekRes(res) {\n  if (res.ok) {\n    return res.json()\n  }\n  return Promise.reject(console.log(`Ошибка: ${res.status}`))\n}\n\ngetAllCards() {\n  return fetch(`${this._url}/cards`, {\n    method: \"GET\",\n    headers: this._headers\n  })\n  .then(res => {\n    return this._chekRes(res)\n  })\n}\n\ngetUserInfo() {\n  return fetch(`${this._url}/users/me`, {\n    method: \"GET\",\n    headers: this._headers\n  })\n    .then((res) => {\n      return this._chekRes(res)\n    })\n}\n\npatchUserInfo(data) {\n  return fetch(`${this._url}/users/me`, {\n    method: 'PATCH',\n    headers: this._headers,\n    body: JSON.stringify(data)\n  })\n    .then((res) => {\n      return this._chekRes(res)\n    })\n}\n\nuploadAvatar(data) {\n  return fetch(`${this._url}/users/me/avatar`, {\n    method: 'PATCH',\n    headers: this._headers,\n    body: JSON.stringify(data)\n  })\n    .then((res) => {\n      return this._chekRes(res)\n    })\n}\n\npostNewCard(data) {\n  return fetch(`${this._url}/cards`, {\n    method: 'POST',\n    headers: this._headers,\n    body: JSON.stringify(data)\n  })\n    .then((res) => {\n      return this._chekRes(res)\n    })\n}\n\nputCardLike(id) {\n  return fetch(`${this._url}/cards/likes/${id}`, {\n    method: 'PUT',\n    headers: this._headers,\n  })\n    .then((res) => {\n      return this._chekRes(res)\n    });\n}\n\ndeleteCardLike(id) {\n  return fetch(`${this._url}/cards/likes/${id}`, {\n    method: 'DELETE',\n    headers: this._headers,\n  })\n    .then((res) => {\n      return this._chekRes(res)\n    });\n}\n\ndeleteCard(data) {\n  return fetch(`${this._url}/cards/${data._id}`, {\n    method: 'DELETE',\n    headers: this._headers\n  })\n    .then((res) => {\n      return this._chekRes(res)\n    })\n}\n}\n\nconst api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-30',\n  headers: {\n    authorization: 'b725fbaf-4205-4fab-8325-c71ecb1c6595',\n    'Content-Type' : 'application/json'\n  }\n})\n\nexport {api}\n"]},"metadata":{},"sourceType":"module"}