{"ast":null,"code":"export class Api {\n  constructor(config) {\n    this._url = config.url;\n    this._headers = config.headers;\n  }\n\n  _chekRes(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(console.log(`Ошибка: ${res.status}`));\n  }\n\n  getAllCards() {\n    return fetch(`${this._url}/cards`, {\n      method: \"GET\",\n      headers: this._headers\n    }).then(res => {\n      return this._chekRes(res);\n    });\n  }\n\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      method: \"GET\",\n      headers: this._headers\n    }).then(res => {\n      return this._chekRes(res);\n    });\n  }\n\n  patchUserInfo(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(res => {\n      return this._chekRes(res);\n    });\n  }\n\n  uploadAvatar(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(res => {\n      return this._chekRes(res);\n    });\n  }\n\n  postNewCard(data) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(res => {\n      return this._chekRes(res);\n    });\n  }\n\n  putCardLike(id) {\n    return fetch(`${this._url}/cards/likes/${id}`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(res => {\n      return this._chekRes(res);\n    });\n  }\n\n  deleteCardLike(id) {\n    return fetch(`${this._url}/cards/likes/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => {\n      return this._chekRes(res);\n    });\n  }\n\n  deleteCard(data) {\n    return fetch(`${this._url}/cards/${data._id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => {\n      return this._chekRes(res);\n    });\n  }\n\n}\nconst api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-30',\n  headers: {\n    authorization: 'b725fbaf-4205-4fab-8325-c71ecb1c6595',\n    'Content-Type': 'application/json'\n  }\n});\nexport { api };","map":{"version":3,"sources":["/Users/glebzdanov/Desktop/ПР 10 React/mesto-react/src/utils/Api.js"],"names":["Api","constructor","config","_url","url","_headers","headers","_chekRes","res","ok","json","Promise","reject","console","log","status","getAllCards","fetch","method","then","getUserInfo","patchUserInfo","data","body","JSON","stringify","uploadAvatar","postNewCard","putCardLike","id","deleteCardLike","deleteCard","_id","api","authorization"],"mappings":"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","sourcesContent":["export class Api {\n  constructor(config) {\n    this._url = config.url;\n    this._headers = config.headers;\n  }\n\n_chekRes(res) {\n  if (res.ok) {\n    return res.json()\n  }\n  return Promise.reject(console.log(`Ошибка: ${res.status}`))\n}\n\ngetAllCards() {\n  return fetch(`${this._url}/cards`, {\n    method: \"GET\",\n    headers: this._headers\n  })\n  .then(res => {\n    return this._chekRes(res)\n  })\n}\n\ngetUserInfo() {\n  return fetch(`${this._url}/users/me`, {\n    method: \"GET\",\n    headers: this._headers\n  })\n    .then((res) => {\n      return this._chekRes(res)\n    })\n}\n\npatchUserInfo(data) {\n  return fetch(`${this._url}/users/me`, {\n    method: 'PATCH',\n    headers: this._headers,\n    body: JSON.stringify(data)\n  })\n    .then((res) => {\n      return this._chekRes(res)\n    })\n}\n\nuploadAvatar(data) {\n  return fetch(`${this._url}/users/me/avatar`, {\n    method: 'PATCH',\n    headers: this._headers,\n    body: JSON.stringify(data)\n  })\n    .then((res) => {\n      return this._chekRes(res)\n    })\n}\n\npostNewCard(data) {\n  return fetch(`${this._url}/cards`, {\n    method: 'POST',\n    headers: this._headers,\n    body: JSON.stringify(data)\n  })\n    .then((res) => {\n      return this._chekRes(res)\n    })\n}\n\nputCardLike(id) {\n  return fetch(`${this._url}/cards/likes/${id}`, {\n    method: 'PUT',\n    headers: this._headers,\n  })\n    .then((res) => {\n      return this._chekRes(res)\n    });\n}\n\ndeleteCardLike(id) {\n  return fetch(`${this._url}/cards/likes/${id}`, {\n    method: 'DELETE',\n    headers: this._headers,\n  })\n    .then((res) => {\n      return this._chekRes(res)\n    });\n}\n\ndeleteCard(data) {\n  return fetch(`${this._url}/cards/${data._id}`, {\n    method: 'DELETE',\n    headers: this._headers\n  })\n    .then((res) => {\n      return this._chekRes(res)\n    })\n}\n}\n\nconst api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-30',\n  headers: {\n    authorization: 'b725fbaf-4205-4fab-8325-c71ecb1c6595',\n    'Content-Type' : 'application/json'\n  }\n})\n\nexport {api}\n"]},"metadata":{},"sourceType":"module"}